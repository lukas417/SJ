program ::= 'BEGIN' statement_list 'END'
statement_list ::= statement statement_listX
statement_listX ::= statement_list
statement_listX ::= EPSILON
statement ::= ident ':=' expression ';'
statement ::= 'READ' '(' id_list ')' ';'
statement ::= 'WRITE' '(' expr_list ')' ';'
statement ::= 'IF' bexpr 'THEN' statement statementX
statementX ::= 'ELSE' statement ';'
statementX ::= ';'
id_list ::= ident id_listX
id_listX ::= ',' id_list
id_listX ::= EPSILON
expr_list ::= expression expr_listX
expr_listX ::= ',' expr_list
expr_listX ::= EPSILON
expression ::= factor expressionXX
expressionXX ::= expressionX
expressionXX ::= EPSILON
expressionX ::= op factor expressionXX 
factor ::= '(' expression ')'
factor ::= ident 
factor ::= number
op ::= '+'
op ::= '-'
bexpr ::= bterm bexprXX
bexprX ::= 'OR' bterm bexprXX
bexprXX ::= bexprX
bexprXX ::= EPSILON
bterm ::= bfactor btermXX
btermX ::= 'AND' bfactor btermXX
btermXX ::= btermX
btermXX ::= EPSILON
bfactor ::= 'NOT' bfactor
bfactor ::= '(' bexpr ')'
bfactor ::= 'TRUE'
bfactor ::= 'FALSE'
ident ::= letter identX
identX ::= ident
identX ::= identXX
identX ::= EPSILON
identXX ::= digit09 identXX
identXX ::= EPSILON
number ::= '+' digit19 numberX
number ::= '-' digit19 numberX
number ::= digit19 numberX
numberX ::= digit09 numberX
numberX ::= EPSILON
digit09 ::= 0 
digit09 ::= 1
digit09 ::= 2
digit09 ::= 3
digit09 ::= 4
digit09 ::= 5
digit09 ::= 6
digit09 ::= 7
digit09 ::= 8
digit09 ::= 9
digit19 ::= 1
digit19 ::= 2
digit19 ::= 3
digit19 ::= 4
digit19 ::= 5
digit19 ::= 6
digit19 ::= 7
digit19 ::= 8
digit19 ::= 9
letter ::= let
